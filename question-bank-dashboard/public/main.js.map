{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-new-bank/add-new-bank.component.ts","./src/app/components/add-new-bank/add-new-bank.component.html","./src/app/components/add-new-question/add-new-question.component.ts","./src/app/components/add-new-question/add-new-question.component.html","./src/app/components/delete-question/delete-question.component.ts","./src/app/components/delete-question/delete-question.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/manual-final/manual-final.component.ts","./src/app/components/manual-final/manual-final.component.html","./src/app/components/paper-details/paper-details.component.ts","./src/app/components/paper-details/paper-details.component.html","./src/app/components/pnf/pnf.component.ts","./src/app/components/pnf/pnf.component.html","./src/app/components/question-bank-details/question-bank-details.component.ts","./src/app/components/question-bank-details/question-bank-details.component.html","./src/app/components/question-bank-list/question-bank-list.component.ts","./src/app/components/question-bank-list/question-bank-list.component.html","./src/app/components/question-paper-type/question-paper-type.component.ts","./src/app/components/question-paper-type/question-paper-type.component.html","./src/app/components/question-paper/question-paper.component.ts","./src/app/components/question-paper/question-paper.component.html","./src/app/components/random-final/random-final.component.ts","./src/app/components/random-final/random-final.component.html","./src/app/components/select-questions/select-questions.component.ts","./src/app/components/select-questions/select-questions.component.html","./src/app/components/update-question/update-question.component.ts","./src/app/components/update-question/update-question.component.html","./src/app/pipes/option.pipe.ts","./src/app/services/auth.service.ts","./src/app/services/question-bank.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'question-bank-dashboard';\n}\n","<app-header></app-header>\n\n<div class=\"container\" id=\"maincontent\">\n\n    <!-- <app-customer-details></app-customer-details> -->\n    <!-- <app-customer-list></app-customer-list> -->\n    \n    <!-- router-outlet is a component that comes from the RouterModule -->\n    <!-- based on the 'path', an appropriate component will be placed next to this one -->\n    <router-outlet></router-outlet>\n    \n</div>\n\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Route, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { PnfComponent } from './components/pnf/pnf.component';\nimport { QuestionBankListComponent } from './components/question-bank-list/question-bank-list.component';\nimport { QuestionBankDetailsComponent } from './components/question-bank-details/question-bank-details.component';\nimport { OptionPipe } from './pipes/option.pipe';\nimport { AddNewBankComponent } from './components/add-new-bank/add-new-bank.component';\nimport { AddNewQuestionComponent } from './components/add-new-question/add-new-question.component';\nimport { DeleteQuestionComponent } from './components/delete-question/delete-question.component';\nimport { UpdateQuestionComponent } from './components/update-question/update-question.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { QuestionPaperComponent } from './components/question-paper/question-paper.component';\nimport { QuestionPaperTypeComponent } from './components/question-paper-type/question-paper-type.component';\nimport { SelectQuestionsComponent } from './components/select-questions/select-questions.component';\nimport { RandomFinalComponent } from './components/random-final/random-final.component';\nimport { ManualFinalComponent } from './components/manual-final/manual-final.component';\nimport { PaperDetailsComponent } from './components/paper-details/paper-details.component';\n\n\n\n// a 'Route' is an object that contains 'path'->'Component' mapping\n// a 'path' is nothing but a URI segment\n// For example, http://localhost:4200/home --> '/home' is the path\n// For example, http://localhost:4200/customers --> '/customers' is the path\n// For example, http://localhost:4200/customers/ANTON --> '/customers/<id>' is the path\n// For example, http://localhost:4200/add-customer --> '/add-customer' is the path\n\nconst routeConfig: Array<Route> = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'home'\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n    path: 'view-all',\n    component: QuestionBankListComponent\n  },\n  {\n    path: 'add-new-bank',\n    component: AddNewBankComponent\n  },\n  {\n    path: 'add-question',\n    component: AddNewQuestionComponent\n  },\n  {\n    path: 'update-question',\n    component: UpdateQuestionComponent\n  },\n\n  {\n    path: 'update-question/:question',\n    component: UpdateQuestionComponent\n  },\n\n  {\n    path: 'view-details/:bname/:author',\n    component: QuestionBankDetailsComponent\n  },\n\n  {\n    path: 'delete-question',\n    component: DeleteQuestionComponent\n  },\n  {\n    path: 'question-paper-home',\n    component: QuestionPaperComponent\n  },\n  {\n    path: 'question-paper-type',\n    component: QuestionPaperTypeComponent\n  },\n  {\n    path: 'select-questions',\n    component: SelectQuestionsComponent\n  },\n  {\n    path: 'random-final',\n    component: RandomFinalComponent\n  },\n  {\n    path: 'manual-final',\n    component: ManualFinalComponent\n  },\n//   {\n//     path: 'pipes-demo',\n//     component: PipesDemoComponent\n//   },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'paper-details',\n    component: PaperDetailsComponent\n  },\n  {\n    // this is the default route handler; must be the last one.\n    path: '**',\n    component: PnfComponent\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    PnfComponent,\n    QuestionBankListComponent,\n    QuestionBankDetailsComponent,\n    OptionPipe,\n    AddNewBankComponent,\n    AddNewQuestionComponent,\n    DeleteQuestionComponent,\n    UpdateQuestionComponent,\n    LoginComponent,\n    QuestionPaperComponent,\n    QuestionPaperTypeComponent,\n    SelectQuestionsComponent,\n    RandomFinalComponent,\n    ManualFinalComponent,\n    PaperDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(routeConfig),\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { QuestionBankService } from 'src/app/services/question-bank.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-add-new-bank',\n  templateUrl: './add-new-bank.component.html',\n  styleUrls: ['./add-new-bank.component.css']\n})\nexport class AddNewBankComponent implements OnInit {\n\n  // this variable gets automatically updated as an when the user\n  // enters details in the textboxes (due to [(ngModel)] two-way data binding)\n  qBank: any = {};\n\n  constructor(private service: QuestionBankService,\n    private router: Router,\n    private authService: AuthService) { }\n\n  ngOnInit(): void {\n    if (!this.authService.isUserLoggedIn) {\n      this.router.navigate(['/login']);\n    }\n  }\n\n\n  save(): void {\n    this.service.addNewQuestionBank(this.qBank)\n      .subscribe(\n        () => this.router.navigate(['/view-all']), // success callback\n        () => window.alert('There was an error! Please check the console logs.') // error callback\n      );\n  }\n\n}\n","<h3>Add Question Bank</h3>\n<hr>\n\n<!-- frm is a reference to the entire form -->\n<form #frm=\"ngForm\">\n    <div class=\"row\">\n\n\n        <div class=\"col\">\n\n\n            <div class=\"form-group\">\n                <label for=\"bName\">Question Bank Name</label>\n                <input id=\"bName\" #bName=\"ngModel\" name=\"bName\" type=\"text\" [(ngModel)]=\"qBank.bname\"\n                    required minlength=\"5\" maxlength=\"40\" class=\"form-control\" pattern=\"[a-zA-Z]*\" >\n\n                <div class=\"text-danger\" *ngIf=\"bName.dirty && bName.errors\">\n                    <small *ngIf=\"bName.errors.required\">Question Bank id is mandatory</small>\n                    <small *ngIf=\"bName.errors.minlength\">Atleast 5 letters required</small><br>\n                    <small *ngIf=\"bName.errors.pattern\">Only Alphabets allowed</small>\n                </div>    \n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"author\">Author</label>\n                <input id=\"author\" #author=\"ngModel\" name=\"author\" type=\"text\" [(ngModel)]=\"qBank.author\"\n                    required minlength=\"5\" maxlength=\"30\" class=\"form-control\" pattern=\"[a-zA-Z]*\">\n\n                <div class=\"text-danger\" *ngIf=\"author.dirty && author.errors\">\n                    <small *ngIf=\"author.errors.required\">Author name is mandatory</small>\n                    <small *ngIf=\"author.errors.minlength\">Atleast 5 letters required</small><br>\n                    <small *ngIf=\"author.errors.pattern\">Only Alphabets allowed</small>\n                </div> \n            </div>\n\n            <div class=\"form-group\">\n                <label>&nbsp;</label>\n                <div>\n                    <button type=\"button\" class=\"col-sm-0.7 btn btn-primary\" routerLink=\"/view-all\">Back</button>\n                    <span class=\"col\"></span>\n                    <button class=\"btn btn-primary\" [disabled]=\"frm.invalid\" [ngClass]=\"{'btn-warning': frm.invalid}\"\n                        (click)=\"save()\">Submit</button>\n                </div>\n            </div> \n        </div>\n\n        <div class=\"col\">\n\n        </div>\n\n            \n\n\n\n    </div>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport { QuestionBankService } from 'src/app/services/question-bank.service';\nimport { Router, ActivatedRoute, Route } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-add-new-question',\n  templateUrl: './add-new-question.component.html',\n  styleUrls: ['./add-new-question.component.css']\n})\nexport class AddNewQuestionComponent implements OnInit {\n\n // this variable gets automatically updated as an when the user\n  // enters details in the textboxes (due to [(ngModel)] two-way data binding)\n  question: any = {};\n  questionDummy: any = {};\n  bname: string;\n  author: string;\n\n  constructor(private service: QuestionBankService,\n    private router: Router, private activatedRoute: ActivatedRoute,\n    private authService: AuthService) { }\n\n  ngOnInit(): void {\n    if (!this.authService.isUserLoggedIn) {\n      this.router.navigate(['/login']);\n    }\n  //   this.activatedRoute.params.subscribe(p => {\n  //     //this.question = p;\n  //     //this.questionDummy = p;\n  //     //console.log('Here ',this.question);\n  //     //this.service.deleteQuestion(this.question.question).subscribe();\n  // });\n  this.bname = this.service.bname;\n  this.author = this.service.author;\n}\n\n  \n \n\n  save(): void {\n      this.service.addNewQuestion(this.question,this.service.bname,this.service.author)\n      .subscribe(\n        () => this.router.navigate(['/view-details/' + this.service.bname + '/' + this.service.author]), // success callback\n        () => window.alert('There was an error! Please check the console logs.') // error callback\n      );\n        \n     \n   }\n    \n  \n\n}","<h3>Add a Question</h3>\n<hr>\n\n<form #frm=\"ngForm\">\n    <div class=\"row\">\n\n\n        <div class=\"col\">\n\n\n            <div class=\"form-group\">\n                <label for=\"que\">Question</label>\n                <input id=\"que\" #que=\"ngModel\" name=\"que\" type=\"text\" [(ngModel)]=\"question.question\"\n                    required minlength=\"5\" maxlength=\"40\" class=\"form-control\" >\n\n                <div class=\"text-danger\" *ngIf=\"que.dirty && que.errors\">\n                    <small *ngIf=\"que.errors.required\">Question is mandatory</small>\n                    <small *ngIf=\"que.errors.minlength\">Atleast 5 letters required</small><br>\n                </div>    \n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"one\">Option One</label>\n                <input id=\"one\" #one=\"ngModel\" name=\"one\" type=\"text\" [(ngModel)]=\"question.answer_one\"\n                    required minlength=\"2\" maxlength=\"30\" class=\"form-control\" >\n\n                <div class=\"text-danger\" *ngIf=\"one.dirty && one.errors\">\n                    <small *ngIf=\"one.errors.required\">Above field is mandatory</small>\n                    <small *ngIf=\"one.errors.minlength\">Atleast 2 letters required</small><br>\n                </div> \n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"two\">Option Two</label>\n                <input id=\"two\" #two=\"ngModel\" name=\"two\" type=\"text\" [(ngModel)]=\"question.answer_two\"\n                    required minlength=\"2\" maxlength=\"30\" class=\"form-control\" >\n\n                <div class=\"text-danger\" *ngIf=\"two.dirty && two.errors\">\n                    <small *ngIf=\"two.errors.required\">Above field is mandatory</small>\n                    <small *ngIf=\"two.errors.minlength\">Atleast 2 letters required</small><br>\n                </div> \n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"three\">Option Three</label>\n                <input id=\"three\" #three=\"ngModel\" name=\"three\" type=\"text\" [(ngModel)]=\"question.answer_three\"\n                    required minlength=\"2\" maxlength=\"30\" class=\"form-control\" >\n\n                <div class=\"text-danger\" *ngIf=\"three.dirty && three.errors\">\n                    <small *ngIf=\"three.errors.required\">Above field is mandatory</small>\n                    <small *ngIf=\"three.errors.minlength\">Atleast 2 letters required</small><br>\n                </div> \n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"four\">Option Four</label>\n                <input id=\"four\" #four=\"ngModel\" name=\"four\" type=\"text\" [(ngModel)]=\"question.answer_four\"\n                    required minlength=\"2\" maxlength=\"30\" class=\"form-control\">\n\n                <div class=\"text-danger\" *ngIf=\"four.dirty && four.errors\">\n                    <small *ngIf=\"four.errors.required\">Above field is mandatory</small>\n                    <small *ngIf=\"four.errors.minlength\">Atleast 2 letters required</small><br>\n                </div> \n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"cans\">Correct Answer(1-4)</label>\n                <input id=\"cans\" #cans=\"ngModel\" name=\"cans\" type=\"text\" [(ngModel)]=\"question.correct_answer\"\n                     required class=\"form-control\" pattern=\"[1-4]{1}\">\n\n                <div class=\"text-danger\" *ngIf=\"cans.dirty && cans.errors\">\n                    <small *ngIf=\"cans.errors.required\">Above field is mandatory</small>\n                    <small *ngIf=\"cans.errors.pattern\">Only 1-4 Numbers allowed</small>\n                </div> \n            </div>\n\n            <div class=\"form-group\">\n                <label>&nbsp;</label>\n                <div>\n                    <button type=\"button\" class=\"col-sm-0.7 btn btn-primary\" [routerLink]=\"['/view-details', bname, author]\">Back</button>\n                    <span class=\"col\"></span>\n                    <button class=\"btn btn-primary\" [disabled]=\"frm.invalid\" [ngClass]=\"{'btn-warning': frm.invalid}\"\n                        (click)=\"save()\">Submit</button>\n                </div>\n            </div> \n        </div>\n\n        <div class=\"col\">\n\n        </div>\n\n            \n\n\n\n    </div>\n</form>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { AddNewBankComponent } from '../add-new-bank/add-new-bank.component';\nimport { QuestionBankService } from 'src/app/services/question-bank.service';\n\n@Component({\n  selector: 'app-delete-question',\n  templateUrl: './delete-question.component.html',\n  styleUrls: ['./delete-question.component.css']\n})\nexport class DeleteQuestionComponent implements OnInit {\n\n  constructor(private service: QuestionBankService) { }\n\n  ngOnInit(): void {\n  }\n\n \n  }\n\n\n\n","<p>delete-question works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p class=\"text-center\">\n    &copy; 2020 All rights reserved by <a href=\"http://taushiqswebsite.epizy.com/?i=1\">Taushiq Awais</a>.\n</p>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public authService: AuthService,private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  logout(): void {\n    this.authService.logout();\n    this.router.navigate(['/home']);\n  }\n\n}\n","<div class=\"alert alert-primary\">\n    <div class=\"container\">\n        <h1>Question Bank Dashboard</h1>\n    </div>\n</div>\n\n<div class=\"container\">\n    <button routerLink=\"/home\" class=\"btn btn-link\">Home</button> |\n\n    <span *ngIf=\"authService.isUserLoggedIn\">\n        <button routerLink=\"/view-all\" class=\"btn btn-link\">View all</button> |\n        <button routerLink=\"/question-paper-home\" class=\"btn btn-link\">Question Paper</button> |\n        <button (click)=\"logout()\" class=\"btn btn-link\">Logout</button>\n    </span>\n    <button *ngIf=\"!authService.isUserLoggedIn\" routerLink=\"/login\" class=\"btn btn-link\">Login</button>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-2\"></div>\n    <div class=\"col\">\n        \n        <img class=\"taushiq-image\" alt=\"100x100\" src=\"/assets/images/taushiq.jpg\" data-holder-rendered=\"true\">\n        <h1>Question Bank Application</h1>\n        <p>Powered by Angular 10.0.4</p>\n        <p>Developed by <a href=\"http://taushiqswebsite.epizy.com/?i=1\" target=\"_blank\">Taushiq Awais</a></p>\n        <p>Email: <a href=\"mailto:taushiqawais@gmail.com\">taushiqawais@gmail.com</a></p>\n        <p>Mob: +91 8444052246</p>\n\n    </div>\n    <div class=\"col-md-2\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  email: string;\n  password: string;\n  invalid: boolean;\n\n  constructor(private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    if (this.authService.isUserLoggedIn) {\n      // redirect the user to '/view-all'\n      this.router.navigate(['/view-all']);\n    }\n  }\n\n  login() {\n    this.authService\n      .login(this.email, this.password)\n      .subscribe(\n        () => {this.router.navigate(['/view-all']);this.invalid = false},\n        err => this.invalid = true\n      );\n  }\n}\n","<h3>Login to access/modify Question Banks</h3>\n<hr>\n\n<div class=\"row\">\n    <div class=\"col\">\n        <form>\n            <div class=\"form-group row\">\n                <label for=\"email\" class=\"col-sm-2 col-form-label\">Email</label>\n                <div class=\"col-sm-10\">\n                    <input type=\"text\" class=\"form-control\" id=\"email\" name=\"email\" [(ngModel)]=\"email\">\n                </div>\n            </div>\n            <div class=\"form-group row\">\n                <label for=\"passwd\" class=\"col-sm-2 col-form-label\">Password</label>\n                <div class=\"col-sm-10\">\n                    <input type=\"password\" class=\"form-control\" id=\"passwd\" name=\"passwd\" [(ngModel)]=\"password\">\n                    <div class=\"text-danger\" *ngIf=\"invalid\">\n                        <small >Invalid Username/Password</small>\n                    </div>\n                </div>\n\n            </div>\n\n\n            \n\n            <button (click)=\"login()\" class=\"btn btn-primary\">Login</button>\n        </form>\n    </div>\n    <div class=\"col\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manual-final',\n  templateUrl: './manual-final.component.html',\n  styleUrls: ['./manual-final.component.css']\n})\nexport class ManualFinalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>manual-final works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { QuestionBankService } from 'src/app/services/question-bank.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-paper-details',\n  templateUrl: './paper-details.component.html',\n  styleUrls: ['./paper-details.component.css']\n})\nexport class PaperDetailsComponent implements OnInit {\n\n  constructor(public service: QuestionBankService,\n    private router: Router,\n    private authService: AuthService) { }\n\n  ngOnInit(): void {\n    if (!this.authService.isUserLoggedIn) {\n      this.router.navigate(['/login']);\n    }\n    \n  }\n\n}\n","<div >\n    <br>\n    <h1 class=\"alert text-warning text-center\">Almost Done!</h1>\n    <h4 >Please enter the details for the Question Paper</h4>\n    <br>\n\n    \n\n    <form #frm=\"ngForm\">\n        <div class=\"row\">\n    \n    \n            <div class=\"col\">\n    \n    \n                <div class=\"form-group\">\n                    <label for=\"head\">Question Paper Heading</label>\n                    <input id=\"head\" #head=\"ngModel\" name=\"head\" type=\"text\" [(ngModel)]=\"service.heading\"\n                        required minlength=\"5\" maxlength=\"40\" class=\"form-control\" pattern=\"[a-zA-Z0-9 ]*\" >\n    \n                    <div class=\"text-danger\" *ngIf=\"head.dirty && head.errors\">\n                        <small *ngIf=\"head.errors.required\">Question Bank id is mandatory</small>\n                        <small *ngIf=\"head.errors.minlength\">Atleast 5 letters required</small><br>\n                        <small *ngIf=\"head.errors.pattern\">Only Alphabets and Numbers are allowed</small>\n                    </div>    \n                </div>\n    \n                <div class=\"form-group\">\n                    <label for=\"sub\">Question Paper Sub Heading</label>\n                    <input id=\"sub\" #sub=\"ngModel\" name=\"sub\" type=\"text\" [(ngModel)]=\"service.subHeading\"\n                        required minlength=\"5\" maxlength=\"30\" class=\"form-control\" pattern=\"[a-zA-Z0-9 ]*\">\n    \n                    <div class=\"text-danger\" *ngIf=\"sub.dirty && sub.errors\">\n                        <small *ngIf=\"sub.errors.required\">Author name is mandatory</small>\n                        <small *ngIf=\"sub.errors.minlength\">Atleast 5 letters required</small><br>\n                        <small *ngIf=\"sub.errors.pattern\">Only Alphabets and Numbers are allowed</small>\n                    </div> \n                </div>\n    \n                <div class=\"form-group\">\n                    <label>&nbsp;</label>\n                    <div>\n                        <button type=\"button\" class=\"col-sm-0.7 btn btn-primary\" routerLink=\"/question-paper-type\">Back</button>\n                        <span class=\"col\"></span>\n                        <button class=\"btn btn-primary\" [disabled]=\"frm.invalid\" [ngClass]=\"{'btn-warning': frm.invalid}\"\n                        routerLink=\"/random-final\">Submit</button>\n                    </div>\n                </div> \n            </div>\n    \n            <div class=\"col\">\n    \n            </div>\n    \n                \n    \n    \n    \n        </div>\n    </form>\n\n\n\n\n            \n    \n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pnf',\n  templateUrl: './pnf.component.html',\n  styleUrls: ['./pnf.component.css']\n})\nexport class PnfComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3 class=\"text-danger text-center\">\n    OOPS! You landed here, since the page you are looking for does not exist.\n</h3>\n<p class=\"text-center\">Try something from the menu!</p>\n\n<div class=\"text-center\">\n    <img src=\"/assets/images/404.png\" alt=\"Page not found\">\n</div>","import { Component, OnInit } from '@angular/core';\nimport { QuestionBankService } from '../../services/question-bank.service';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-question-bank-details',\n  templateUrl: './question-bank-details.component.html',\n  styleUrls: ['./question-bank-details.component.css']\n})\nexport class QuestionBankDetailsComponent implements OnInit {\n\n  public questions;\n  public count;\n  public bankName;\n  public author;\n  mySubscription: any;\n\n  constructor(public service: QuestionBankService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService) { \n\n      this.router.routeReuseStrategy.shouldReuseRoute = function () {\n        return false;\n      };\n      \n      this.mySubscription = this.router.events.subscribe((event) => {\n        if (event instanceof NavigationEnd) {\n          // Trick the Router into believing it's last link wasn't previously loaded\n          this.router.navigated = false;\n        }\n      });\n    }\n\n  ngOnInit(): void { \n    if (!this.authService.isUserLoggedIn) {\n      this.router.navigate(['/login']);\n    }\n    else {\n\n    //   this.activatedRoute.params.subscribe(p => {\n    //     this.service.getOneCustomer(p['customerId'])\n    //       .subscribe(data => this.cust = data);\n    //   });\n    // }\n\n    this.activatedRoute.params.subscribe(p => {\n          this.service.getQuestionBank(p['bname'],p['author'])\n             .subscribe(resp => {\n              //console.log('response',resp.data);\n              this.questions = resp.data;\n              //console.log('data',this.questions)\n              // this.totalCustomers = resp.count;\n              this.count = resp.count;\n              this.bankName = resp.name;\n              this.author = p['author'];\n            });\n         });\n       }\n      }\n\n       delete(question: string): void{\n          this.service.deleteQuestion(question)\n          .subscribe(\n            () => {this.router.navigate([`/view-details/${this.bankName}/${this.author}`])}, // success callback\n            () => window.alert('There was an error! Please check the console logs.') // error callback\n          );\n       }\n\n       deleteBank():void{\n         this.service.deleteQuestionBank()\n         .subscribe(\n          () => {this.router.navigate([`/view-all`])}, // success callback\n          () => window.alert('There was an error! Please check the console logs.') // error callback\n\n         );\n       }\n\n       ngOnDestroy() {\n        if (this.mySubscription) {\n          this.mySubscription.unsubscribe();\n        }\n      }\n\n\n  \n\n}\n\n","<h3>Question Bank details</h3>\n<hr>\n\n<!-- show this div when 'cust' is undefined\n<div class=\"text-center\" *ngIf=\"questions===undefined\">\n    <img src=\"/assets/images/loading.gif\" alt=\"loading...\">\n</div> -->\n\n\n<!-- show this div when 'cust' is available -->\n<div class=\"container\" *ngIf=\"questions!==undefined\">\n    <div class=\"row\">\n        <h5 class=\"col-md-6 alert \">You are viewing the details of the Question Bank: {{ bankName }}</h5>\n        <h5 class=\"col-md-6 alert text-right\">Total number of Questions: {{ count }}</h5>\n    </div>\n\n\n    <div  *ngFor=\"let q of questions; index as i\">\n        <div class=\"row\">\n            <h5 class=\"col-md-12 alert alert-secondary\">{{i+1}}. &nbsp; {{ q.question }}</h5>\n        </div>\n        \n        <div class=\"row\">\n            <div class=\"col\">\n                <h5 class=\"alert\"> A. &nbsp; {{ q.answer_one }}</h5>\n                <h5 class=\"alert\"> C. &nbsp; {{ q.answer_three }}</h5>\n            </div>\n            <div class=\"col\">\n                <h5 class=\"alert\"> B. &nbsp; {{ q.answer_two }}</h5>\n                <h5 class=\"alert\"> D. &nbsp; {{ q.answer_four }}</h5>\n            </div>\n            <div class=\"container\">\n                <h5 class=\"alert\">Correct Answer: Option {{q.correct_answer | option}}</h5>\n            </div>\n            <div>\n                <button type=\"button\" class=\"col-sm-0.7 btn btn-primary \" [routerLink]=\"['/update-question/',q]\">Edit</button>\n                <span class=\"col\"></span>\n                <button class=\"btn btn-primary\" (click)=\"delete(q.question)\">Delete</button>\n            </div>\n            <br><br><br>\n        </div>\n\n\n    </div>\n\n</div>\n<div class=\"container\">\n    <div class=\"row\">\n        \n        <span class=\"col\"></span>\n        <button type=\"button\" class=\"col-sm-0.7 mr-4 btn btn-primary\" routerLink=\"/view-all\">Back</button>\n        <button type=\"button\" class=\"col-sm-0.7 mr-4 btn btn-primary\" (click) = \"deleteBank()\">Delete this Question Bank</button>\n        <!-- <button class=\"alert text-right\" routerLink=\"/view-all\" >Add a new Question</button> -->\n        <button type=\"button\" class=\"col-sm-0.7 btn btn-primary\" [routerLink]= \"['/add-question']\">Add a New Question</button>\n    </div>\n    <br><br>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { QuestionBankService } from '../../services/question-bank.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-question-bank-list',\n  templateUrl: './question-bank-list.component.html',\n  styleUrls: ['./question-bank-list.component.css']\n})\nexport class QuestionBankListComponent implements OnInit {\n\n  // pageNum: number = 1;\n  questionbanks: Array<any> = [];\n  // totalCustomers: number;\n  lastPage: number;\n\n  constructor(private router: Router, public service: QuestionBankService, private authService: AuthService,) { }\n\n  ngOnInit(): void {\n    if (!this.authService.isUserLoggedIn) {\n      this.router.navigate(['/login']);\n    }\n    else {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.service.getAllQuestionBanks(this.service.pageNum)\n      .subscribe(resp => {\n        //console.log('response',resp.data);\n        this.questionbanks = resp.data;\n        //console.log('data',this.questionbanks)\n        // this.totalCustomers = resp.count;\n        this.lastPage = resp.count % 5 === 0 ? resp.count / 5 : Math.trunc(resp.count / 5) + 1;\n      })\n  }\n\n  gotoPage(where: string = 'first') {\n    switch (where) {\n      case 'last':\n        this.service.pageNum = this.lastPage;\n        break;\n      case 'prev':\n        if (this.service.pageNum > 1) this.service.pageNum--;\n        break;\n      case 'next':\n        if (this.service.pageNum < this.lastPage) this.service.pageNum++;\n        break;\n      default:\n        this.service.pageNum = 1;\n    }\n\n    this.loadData();\n  }\n\n  getBtnClass(btn: string = 'first') {\n    switch (btn) {\n      case 'first':\n      case 'prev':\n        return this.service.pageNum === 1 ? 'btn-danger' : '';\n      default:\n        return this.service.pageNum === this.lastPage ? 'btn-danger' : '';\n    }\n  }\n}\n","<h3>List of Question Banks</h3>\n<hr>\n<!--\n<button [ngClass]=\"{'btn-danger': service.pageNum===1}\" [disabled]=\"service.pageNum===1\" class=\"btn btn-primary\" (click)=\"gotoPage()\" >First</button> &nbsp;\n<button [ngClass]=\"{'btn-danger': service.pageNum===1}\" [disabled]=\"service.pageNum===1\" class=\"btn btn-primary\" (click)=\"gotoPage('prev')\">Previous</button> &nbsp;\n\nShowing page {{ service.pageNum }} of {{ lastPage }} &nbsp;\n\n<button [ngClass]=\"{'btn-danger': service.pageNum===lastPage}\" [disabled]=\"service.pageNum===lastPage\" class=\"btn btn-primary\" (click)=\"gotoPage('next')\">Next</button> &nbsp;\n<button [ngClass]=\"{'btn-danger': service.pageNum===lastPage}\" [disabled]=\"service.pageNum===lastPage\" class=\"btn btn-primary\" (click)=\"gotoPage('last')\" >Last</button>\n-->\n\n<button [ngClass]=\"getBtnClass('first')\" [disabled]=\"service.pageNum===1\" class=\"btn btn-primary\" (click)=\"gotoPage()\" >First</button> &nbsp;\n<button [ngClass]=\"getBtnClass('prev')\" [disabled]=\"service.pageNum===1\" class=\"btn btn-primary\" (click)=\"gotoPage('prev')\">Previous</button> &nbsp;\n\nShowing page {{ service.pageNum }} of {{ lastPage }} &nbsp;\n\n<button [ngClass]=\"getBtnClass('next')\" [disabled]=\"service.pageNum===lastPage\" class=\"btn btn-primary\" (click)=\"gotoPage('next')\">Next</button> &nbsp;\n<button [ngClass]=\"getBtnClass('last')\" [disabled]=\"service.pageNum===lastPage\" class=\"btn btn-primary\" (click)=\"gotoPage('last')\" >Last</button>\n\n<br><br>\n\n<table class=\"table table-bordered table-striped table-hover\">\n    <thead>\n        <tr>\n            <th>Sl no</th>\n            <th>Question Bank Name</th>\n            <th>No of Questions</th>\n            <th>Author</th>\n        </tr>\n    </thead>\n\n    <tbody>\n        <tr *ngFor=\"let qbank of questionbanks; index as i\">\n            <td>{{ i + 1 }}</td>\n            <!-- <td class=\"app-clickable\" [routerLink]=\"['/view-details', cust.CUSTOMER_ID]\">{{ cust.COMPANY_NAME }}</td> -->\n            <td class=\" modify-personal app-clickable\" [routerLink]= \"['/view-details/', qbank.bname, qbank.author]\">{{ qbank.bname }}</td>\n            <td>{{ qbank.no_of_questions }}</td>\n            <td>{{ qbank.author }}</td>\n        </tr>\n    </tbody>\n</table>\n\n<div class=\"container\">\n    <div class=\"row\">\n        <span class=\"col\"></span>\n        <button type=\"button\" class=\"btn btn-primary\" routerLink=\"/add-new-bank\">Add a New Question Bank</button>\n    </div>\n    <!-- <span class=\"col\"></span> -->\n    <!-- <button class=\"alert text-right\" routerLink=\"/view-all\" >Add a new Question</button> -->\n</div>\n\n<!-- round brackets arount an attribute means function binding -->\n<!-- 'click' here is an event -->\n<!-- <button class=\"btn btn-primary\" (click)=\"loadMore()\">Load more</button> -->\n","import { Inject,Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { QuestionBankService } from '../../services/question-bank.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-question-paper-type',\n  templateUrl: './question-paper-type.component.html',\n  styleUrls: ['./question-paper-type.component.css']\n})\nexport class QuestionPaperTypeComponent implements OnInit {\n\n  questionbanks: Array<any> = [];\n  names: Array<any> = [];\n  self = this;\n  value: any;\n  count: number = 0;\n  noOfQuestions:number;\n  constructor(private router: Router, public service: QuestionBankService, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    if (!this.authService.isUserLoggedIn) {\n      this.router.navigate(['/login']);\n    }\n    this.service.finalQuestions = [];\n    this.service.noOfQuestions = 0;\n    this.service.tempquestions = [];\n    this.names = [...this.service.names];\n    //this.questionbanks = this.service.questionBanks;\n    for (let key in this.service.questionBanks) { \n      if (this.service.questionBanks.hasOwnProperty(key)) { \n          this.value = this.service.questionBanks[key]; \n          if(this.names.includes(this.value.bname)) {\n            this.questionbanks.push(this.value);\n            this.count = this.count + this.value.no_of_questions;\n            \n          }\n      } \n  }\n  //console.log(this.count);\n\n  }\n\n  save(): boolean{\n    //console.log('Working',this.noOfQuestions,this.names, this.service.type);\n    this.service.noOfQuestions = this.noOfQuestions;\n    if(this.service.type === 1){\n      this.service.getSelectedQuestions()\n    .subscribe(resp =>{\n      this.service.tempquestions = resp;\n      //console.log('Total Questions',this.service.tempquestions);\n    });\n    return false;\n  }\n}\n\n  onChangeOne(isChecked:boolean): void{\n    if(isChecked) {\n      this.service.type = 1;\n    }else{\n      this.service.type = 2;\n    }\n  }\n\n  onChangeTwo(isChecked:boolean): void{\n    if(isChecked) {\n      this.service.type = 2;\n    }else{\n      this.service.type = 1;\n    }\n  }\n\n  \n  \n}\n","<br>\n<h3>You have selected the following Question Banks</h3>\n<br>\n\n<table class=\" table table-bordered table-striped table-hover\">\n    <thead>\n        <tr>\n            <th>Sl No</th>\n            <th>Question Bank Name</th>\n            <th>No of Questions</th>\n            <th>Author</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let qbank of questionbanks; index as i\">\n            <td> {{i+1}}</td>\n            <!-- <td class=\"app-clickable\" [routerLink]=\"['/view-details', cust.CUSTOMER_ID]\">{{ cust.COMPANY_NAME }}</td> -->\n            <td>{{ qbank.bname }}</td>\n            <td>{{ qbank.no_of_questions }}</td>\n            <td>{{ qbank.author }}</td>\n        </tr>\n    </tbody>\n</table>\n\n<br>\n<h6>Total No of Questions: {{count}}</h6>\n<br>\n\n<div *ngIf=\"count===0\">\n    <br>\n    <h4 class=\"alert text-danger text-center\">There are no questions to be added. Please go back and select the Questions Banks which has questions.</h4>\n\n            <div class=\"col-md-12 text-center\">\n                <button type=\"button\" class=\"btn btn-primary\"  routerLink=\"/question-paper-home\">Go Back to the previous Page</button>\n            </div>\n            <br>\n            \n    \n</div>\n\n<div *ngIf=\"count>0\">\n<br>\n<h4>Please choose the method of selecting questions from the selected Question Banks</h4>\n<br>\n\n<form #frm=\"ngForm\" (ngSubmit)=\"save()\">\n    <div class=\"row\">\n\n\n        <div class=\"col\">\n\n\n            <div class=\"form-group\">\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\"  [(ngModel)]=\"exampleRadios\" id=\"exampleRadios1\" [value]=\"1\"  (change)=\"onChangeOne($event.target.checked)\">\n                    <label class=\"form-check-label\" for=\"exampleRadios1\">\n                      Randomly Select Questions\n                    </label>\n                  </div>\n                  <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"exampleRadios\"  [(ngModel)]=\"exampleRadios\" id=\"exampleRadios2\" [value]=\"2\" (change)=\"onChangeTwo($event.target.checked)\">\n                    <label class=\"form-check-label\" for=\"exampleRadios2\">\n                      Choose the questions manually\n                    </label>\n                  </div>\n            </div>\n\n            <div class=\"form-group\">\n                \n    \n            </div>\n\n\n        </div> \n\n\n\n        <div class=\"col\"></div>\n\n    </div>\n\n    <div *ngIf=\"exampleRadios === 1\">\n        <br>\n        <h4>Please choose the number of questions to be included in the Question Paper</h4>\n        <br>\n        <div class=\"row\" >\n            <div class=\"form-group col-md-3\">\n                <label for=\"que\">No of Questions</label>\n                <input id=\"que\" #que=\"ngModel\" name=\"que\" type=\"number\" [(ngModel)]=\"noOfQuestions\"\n                     required  min=\"1\" max=\"{{count}}\" class=\"form-control\"  >\n\n                <div class=\"text-danger\" *ngIf=\"que.dirty && que.errors\">\n                    <small *ngIf=\"que.errors.required\">Above field is mandatory</small>\n                    <small *ngIf=\"noOfQuestions>count\">Please do not exceed the no of questions available</small>\n                </div>    \n                <small class = \"text-danger\" *ngIf=\"noOfQuestions>count\">Please do not exceed available questions</small>\n                <small class = \"text-danger\" *ngIf=\"noOfQuestions < 1\">No of Questions cannot be less than 1</small>\n            </div>\n            <div class=\"col\">\n\n            </div>\n        </div>\n\n        \n\n    </div>\n\n\n\n\n    \n    <div class=\"container\">\n        <div class=\"row\">\n            <span class=\"col\"></span>\n            <button  class=\"btn btn-primary mr-3\" routerLink=\"/question-paper-home\">Back</button>\n            <button type=\"submit\" *ngIf=\"service.type === 2\" class=\"btn btn-primary mr-3\" [disabled]=\"(exampleRadios !== 1 && exampleRadios !== 2) || frm.invalid || noOfQuestions>count \" routerLink=\"/select-questions\">Next</button>\n            <button type=\"submit\" *ngIf=\"service.type === 1\" class=\"btn btn-primary\" [disabled]=\"(exampleRadios !== 1 && exampleRadios !== 2) || frm.invalid || noOfQuestions>count || noOfQuestions < 1\" (click)=\"save()\" routerLink=\"/paper-details\">Next</button>\n        </div>\n        <!-- <span class=\"col\"></span> -->\n        <!-- <button class=\"alert text-right\" routerLink=\"/view-all\" >Add a new Question</button> -->\n    </div>\n\n    \n\n\n\n</form>\n\n\n\n\n\n\n\n</div>","import { Inject,Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { QuestionBankService } from '../../services/question-bank.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { DOCUMENT } from '@angular/common'; \n\n@Component({\n  selector: 'app-question-paper',\n  templateUrl: './question-paper.component.html',\n  styleUrls: ['./question-paper.component.css']\n})\nexport class QuestionPaperComponent implements OnInit {\n\n  questionbanks: Array<any> = [];\n  names: Array<any> = [];\n  authors: Array<any> = [];\n\n  constructor(@Inject(DOCUMENT) document ,private router: Router, public service: QuestionBankService, private authService: AuthService,) { }\n\n  ngOnInit(): void {\n    if (!this.authService.isUserLoggedIn) {\n      this.router.navigate(['/login']);\n    }\n    else {\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    this.service.getAllQuestionBanksNoLimit()\n    .subscribe(resp => {\n      this.questionbanks = resp;\n      this.service.questionBanks = resp;\n    });\n  }\n\n  \n\n\n\n\n  onChange(bname: string, author:string, i: number, isChecked: boolean){\n    \n    if(isChecked){\n      this.names.push(bname);\n      this.authors.push(author);\n      this.service.names = [...this.names];\n      this.service.authors = [...this.authors];\n    }else{\n      \n      const index = this.names.indexOf(bname);\n      if (index > -1) {\n        this.names.splice(index, 1);\n        \n      }\n      this.service.names = [...this.names];\n    \n    const indextwo = this.authors.indexOf(author);\n      if (indextwo > -1) {\n        this.authors.splice(indextwo, 1);\n        \n      }\n      this.service.authors = [...this.authors];\n    }\n  }\n\n\n\n\n}\n","<br>\n<h3>Select the Question Banks to be included in the Question Paper</h3>\n<br>\n\n\n\n\n<table class=\" table table-bordered table-striped table-hover\">\n    <thead>\n        <tr>\n            <th>Select</th>\n            <th>Question Bank Name</th>\n            <th>No of Questions</th>\n            <th>Author</th>\n        </tr>\n    </thead>\n\n    <tbody>\n        <tr *ngFor=\"let qbank of questionbanks; index as i\">\n            <td><form #frm=\"ngForm\"><input  type=\"checkbox\" (change)=\"onChange(qbank.bname,qbank.author, i ,  $event.target.checked)\" id=\"defaultCheck1\"></form></td>\n            <!-- <td class=\"app-clickable\" [routerLink]=\"['/view-details', cust.CUSTOMER_ID]\">{{ cust.COMPANY_NAME }}</td> -->\n            <td>{{ qbank.bname }}</td>\n            <td>{{ qbank.no_of_questions }}</td>\n            <td>{{ qbank.author }}</td>\n        </tr>\n    </tbody>\n</table>\n\n<div class=\"container\">\n    <div class=\"row\">\n        <span class=\"col\"></span>\n        <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"service.names.length===0\" routerLink=\"/question-paper-type\">Next</button>\n    </div>\n    <!-- <span class=\"col\"></span> -->\n    <!-- <button class=\"alert text-right\" routerLink=\"/view-all\" >Add a new Question</button> -->\n</div>","import { Inject,Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { QuestionBankService } from '../../services/question-bank.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport * as jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\n@Component({\n  selector: 'app-random-final',\n  templateUrl: './random-final.component.html',\n  styleUrls: ['./random-final.component.css']\n})\nexport class RandomFinalComponent implements OnInit {\n  heading: string;\n  questions: Array<any> = [];\n  constructor(private router: Router, public service: QuestionBankService, private authService: AuthService) { }\n  \n  ngOnInit(): void {\n    if (!this.authService.isUserLoggedIn) {\n      this.router.navigate(['/login']);\n    }\n\n    this.heading = this.service.heading;\n    if(this.service.type === 1){\n      let random: number;\n    for(var i = 0 ; i < this.service.noOfQuestions ; i++ ){\n      while(true){\n        //console.log('Questions', this.service.tempquestions);\n        random = Math.random();\n        random = Math.floor((random*this.service.tempquestions.length));\n        //console.log(random);\n        //console.log(this.service.finalQuestions);\n        //console.log(this.service.tempquestions[random]);\n      if(this.service.finalQuestions.includes(this.service.tempquestions[random])){\n        //console.log('If');\n      }else{\n        this.service.finalQuestions.push(this.service.tempquestions[random]);\n        //console.log('Else');\n        break;\n      }\n      }\n      \n    \n    }\n\n    }\n    \n\n\n    }\n\n\n\n\n  htmltoPDF()\n{\n    \n  //   //parentdiv isn = this.service.finalQuestions[0];\n  var doc = new jsPDF();\n  var pageHeight= doc.internal.pageSize.height;\n\n  // Before adding new content\n  var textWidth = doc.getStringUnitWidth(this.service.heading) * doc.internal.getFontSize() / doc.internal.scaleFactor;\n  var textOffset = (doc.internal.pageSize.width - textWidth) / 2;\n  var textWidthone = doc.getStringUnitWidth(this.service.subHeading) * doc.internal.getFontSize() / doc.internal.scaleFactor;\n  var textOffsetone = (doc.internal.pageSize.width - textWidthone) / 2;\n  \n  doc.setFont(\"helvetica\");\n  doc.setFontStyle(\"normal\");\n  doc.setFontSize(16);\n  doc.text(this.service.heading, textOffset, 20);\n  doc.setFont(\"times\");\n  doc.setFontStyle(\"normal\");\n  doc.setFontSize(16);\n  doc.text(this.service.subHeading, textOffsetone, 30);\n  doc.setFontStyle(\"normal\");\n  doc.setFontSize(12);\n  doc.text('Date',10, 45);\n  doc.text('Signature', 140, 45);\n  doc.line(10, 50 , 200 , 50);\n\n\n  doc.setFontSize(12);\n  var gap = 55;\n  for(var i = 0; i<this.service.finalQuestions.length ; i++ ){\n    //console.log(gap);\n    //console.log(pageHeight);\n    \n    if ((gap+70) >= pageHeight)\n    {\n      //console.log(\"Inside If\");\n      //console.log(\"Page Added\");\n      doc.addPage();\n      gap = 0 // Restart height position\n      //console.log(this.service.finalQuestions[i].question);\n    }else{\n      //console.log(\"Inside Else\");\n      //console.log(this.service.finalQuestions[i].question);\n      \n    }\n    doc.setFontSize(16);\n    doc.text('Q'+ (i+1) +'. ' + this.service.finalQuestions[i].question,10,(gap+10));\n    doc.setFontSize(12);\n    doc.text('A. ' + this.service.finalQuestions[i].answer_one,10,(gap+20));\n    doc.text('B. ' + this.service.finalQuestions[i].answer_two,10,(gap+30));\n    doc.text('C. ' + this.service.finalQuestions[i].answer_three,10,(gap+40));\n    doc.text('D. ' + this.service.finalQuestions[i].answer_four,10,(gap+50));\n    gap = gap + 60;\n  }\n\n  doc.addPage();\n  doc.setFontSize(22);\n  doc.setFontStyle(\"bold\");\n  doc.text('Answer Keys', 80, 20 );\n\n  doc.setFontSize(16);\n  doc.setFontStyle(\"normal\");\n  var y = 40;\n  for(var j = 0; j<this.service.finalQuestions.length; j++){\n    doc.text('Question '+ (j+1) + ':    Option ' + this.service.finalQuestions[j].correct_answer,20,(y+j*10));\n  }\n\n\n\n\n\n  doc.save('QuestionPaper.pdf');\n\n\n}\n\n}\n","<div id=\"parentdiv\">\n    <br><br><br>\n    <h1 class=\"alert text-success text-center\">CONGRATULATIONS!</h1>\n    <h2 class=\"alert text-warning text-center\">Your Question Paper is ready to be downloaded</h2>\n    \n            <br>\n            <div class=\"col-md-12 text-center\">\n                <button type=\"button\" class=\"btn btn-primary\"  (click)=\"htmltoPDF()\" >Download the Question Paper</button>\n            </div>\n            <br>\n            \n    \n</div>\n\n\n","import { Inject,Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { QuestionBankService } from '../../services/question-bank.service';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-select-questions',\n  templateUrl: './select-questions.component.html',\n  styleUrls: ['./select-questions.component.css']\n})\nexport class SelectQuestionsComponent implements OnInit {\n\n  questions: Array<any>= [];\n\n  constructor(private router: Router, public service: QuestionBankService, private authService: AuthService) { }\n\n  ngOnInit(): void {\n    if (!this.authService.isUserLoggedIn) {\n      this.router.navigate(['/login']);\n    }\n    else {\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    this.service.getSelectedQuestions()\n    .subscribe(resp =>{\n      this.questions = resp;\n      //console.log(this.questions);\n    });\n  }\n\n  onChange(que: object, isChecked:boolean):void{\n    if(isChecked){\n      this.service.finalQuestions.push(que);\n    }else{\n      const index = this.service.finalQuestions.indexOf(que);\n      if (index > -1) {\n        this.service.finalQuestions.splice(index, 1);\n        \n      }\n\n    }\n  }\n\n\n}\n","<br>\n<h3>Select the Questions You want to include in the question paper</h3>\n<br>\n\n<table class=\" table table-bordered table-striped table-hover\">\n    <thead>\n        <tr>\n            <th>Select</th>\n            <th>Question</th>\n            <th>Author</th>\n        </tr>\n    </thead>\n\n    <tbody>\n        <tr *ngFor=\"let q of questions; index as i\">\n            <td><form #frm=\"ngForm\"><input  type=\"checkbox\" (change)=\"onChange(q,$event.target.checked)\" id=\"defaultCheck1\"></form></td>\n            <td>{{ q.question }}</td>\n            <td>{{ q.author }}</td>\n        </tr>\n    </tbody>\n</table>\n\n<div class=\"container\">\n    <div class=\"row\">\n        <span class=\"col\"></span>\n        <button type=\"button\" class=\"btn btn-primary mr-3\" routerLink=\"/question-paper-type\">Back</button>\n        <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"service.finalQuestions.length===0\" routerLink=\"/paper-details\">Submit</button>\n    </div>\n    <!-- <span class=\"col\"></span> -->\n    <!-- <button class=\"alert text-right\" routerLink=\"/view-all\" >Add a new Question</button> -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { QuestionBankService } from '../../services/question-bank.service';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-update-question',\n  templateUrl: './update-question.component.html',\n  styleUrls: ['./update-question.component.css']\n})\nexport class UpdateQuestionComponent implements OnInit {\n\n  ques: any = {};\n\n  constructor(private service: QuestionBankService,\n    private router: Router, private activatedRoute: ActivatedRoute,\n    private authService: AuthService) { }\n\n  ngOnInit(): void {\n    if (!this.authService.isUserLoggedIn) {\n      this.router.navigate(['/login']);\n    }\n    else {\n    this.activatedRoute.params.subscribe(p => {\n          this.ques = JSON.parse(JSON.stringify(p));;\n        });\n    this.service.deleteQuestion(this.ques.question).subscribe();\n    }\n  }\n\n  save(): void{\n    //console.log(this.ques);\n    \n    this.service.addNewQuestion(this.ques,this.service.bname,this.service.author)\n    .subscribe(\n      () => this.router.navigate([`/view-details/${this.service.bname}/${this.service.author}`]), // success callback\n      () => window.alert('There was an error! Please check the console logs.') // error callback\n    );\n  }\n\n\n}\n","\n\n <h3>Update Question</h3>\n<hr>\n\n<form #frm=\"ngForm\">\n    <div class=\"row\">\n\n\n        <div class=\"col\">\n\n\n            <div class=\"form-group\">\n                <label for=\"que\">Question</label>\n                <input id=\"que\" #que=\"ngModel\" name=\"que\" type=\"text\" [(ngModel)]=\"ques.question\"\n                    required minlength=\"5\" maxlength=\"40\" class=\"form-control\" >\n\n                <div class=\"text-danger\" *ngIf=\"que.dirty && que.errors\">\n                    <small *ngIf=\"que.errors.required\">Question is mandatory</small>\n                    <small *ngIf=\"que.errors.minlength\">Atleast 5 letters required</small><br>\n                </div>    \n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"one\">Option One</label>\n                <input id=\"one\" #one=\"ngModel\" name=\"one\" type=\"text\" [(ngModel)]=\"ques.answer_one\"\n                    required minlength=\"2\" maxlength=\"30\" class=\"form-control\" >\n\n                <div class=\"text-danger\" *ngIf=\"one.dirty && one.errors\">\n                    <small *ngIf=\"one.errors.required\">Above field is mandatory</small>\n                    <small *ngIf=\"one.errors.minlength\">Atleast 2 letters required</small><br>\n                </div> \n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"two\">Option Two</label>\n                <input id=\"two\" #two=\"ngModel\" name=\"two\" type=\"text\" [(ngModel)]=\"ques.answer_two\"\n                    required minlength=\"2\" maxlength=\"30\" class=\"form-control\" >\n\n                <div class=\"text-danger\" *ngIf=\"two.dirty && two.errors\">\n                    <small *ngIf=\"two.errors.required\">Above field is mandatory</small>\n                    <small *ngIf=\"two.errors.minlength\">Atleast 2 letters required</small><br>\n                </div> \n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"three\">Option Three</label>\n                <input id=\"three\" #three=\"ngModel\" name=\"three\" type=\"text\" [(ngModel)]=\"ques.answer_three\"\n                    required minlength=\"2\" maxlength=\"30\" class=\"form-control\" >\n\n                <div class=\"text-danger\" *ngIf=\"three.dirty && three.errors\">\n                    <small *ngIf=\"three.errors.required\">Above field is mandatory</small>\n                    <small *ngIf=\"three.errors.minlength\">Atleast 2 letters required</small><br>\n                </div> \n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"four\">Option Four</label>\n                <input id=\"four\" #four=\"ngModel\" name=\"four\" type=\"text\" [(ngModel)]=\"ques.answer_four\"\n                    required minlength=\"2\" maxlength=\"30\" class=\"form-control\">\n\n                <div class=\"text-danger\" *ngIf=\"four.dirty && four.errors\">\n                    <small *ngIf=\"four.errors.required\">Above field is mandatory</small>\n                    <small *ngIf=\"four.errors.minlength\">Atleast 2 letters required</small><br>\n                </div> \n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"cans\">Correct Answer(1-4)</label>\n                <input id=\"cans\" #cans=\"ngModel\" name=\"cans\" type=\"text\" [(ngModel)]=\"ques.correct_answer\"\n                     required class=\"form-control\" pattern=\"[1-4]{1}\">\n\n                <div class=\"text-danger\" *ngIf=\"cans.dirty && cans.errors\">\n                    <small *ngIf=\"cans.errors.required\">Above field is mandatory</small>\n                    <small *ngIf=\"cans.errors.pattern\">Only 1-4 Numbers allowed</small>\n                </div> \n            </div>\n\n            <div class=\"form-group\">\n                <label>&nbsp;</label>\n                <div>\n                    <button type=\"button\" class=\"col-sm-0.7 btn btn-primary\" (click)=\"save()\">Back</button>\n                    <span class=\"col\"></span>\n                    <button class=\"btn btn-primary\" [disabled]=\"frm.invalid\" [ngClass]=\"{'btn-warning': frm.invalid}\"\n                        (click)=\"save()\">Submit</button>\n                </div>\n                <br>\n            </div> \n        </div>\n\n        <div class=\"col\">\n\n        </div>\n\n            \n\n\n\n    </div>\n</form>\n\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'option'\n})\nexport class OptionPipe implements PipeTransform {\n\n  transform(value: number): unknown {\n    switch(value){\n      case 1:\n        return 'A';\n      case 2:\n        return 'B';\n      case 3:\n        return 'C';\n      case 4:\n        return 'D';\n      default:\n        return null;    \n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport md5 from 'md5';\n\nimport 'rxjs/add/operator/do';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  token: string;\n\n  constructor(private http: HttpClient) {\n    if ('token' in window.sessionStorage) {\n      this.token = window.sessionStorage.getItem('token');\n    }\n  }\n\n  // a 'get' function must be used as a readonly variable.\n  // a 'get' function should be a no-argument function, and must return a value\n  get isUserLoggedIn() {\n    return this.token !== undefined;\n  }\n\n  login(email: string, password: string): Observable<any> {\n    password = md5(password);\n    return this.http\n      .post('https://question-bank-rest.herokuapp.com/login', { email, password })\n      //.post('http://localhost:3000/login', { email, password })\n      .do(data => this.token = data['token'])\n      .do(data => window.sessionStorage.setItem('token', data['token']));\n  }\n\n  logout() {\n    this.token = undefined;\n    delete window.sessionStorage.token;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from './auth.service';\n\nimport 'rxjs/add/operator/map'; // npm i rxjs-compat\n// import { AuthService } from './auth.service';\n\n//const baseUrl = 'http://localhost:3000/questionbanks';\nconst baseUrl = 'https://question-bank-rest.herokuapp.com/questionbanks';\n\n// injectables are singletons (Angular creates a single instance of this class)\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionBankService {\n  bname: string;\n  author: string;\n  pageNum: number = 1;\n  names: Array<any> = [];\n  authors: Array<any> = [];\n  questionBanks: Array<any> = [];\n  type:number;\n  finalQuestions: Array<any> = [];\n  heading:string;\n  subHeading:string;\n  noOfQuestions:number;\n  tempquestions: Array<any> = [];\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  // addNewCustomer(customer: any): Observable<any> {\n  //   const options = {\n  //     headers: {\n  //       'authorization': 'Bearer ' + this.authService.token\n  //     }\n  //   };\n  //   return this.http.post(baseUrl, customer, options);\n  // }\n\n  addNewQuestionBank(questionBank: any): Observable<any> {\n    const options = {\n          headers: {\n            'authorization': 'Bearer ' + this.authService.token\n          }\n        };\n    return this.http.post(baseUrl + '/addquestionbank', questionBank, options);\n  }\n\n  addNewQuestion(question: any,bname: string, author: string): Observable<any> {\n    const options = {\n      headers: {\n        'authorization': 'Bearer ' + this.authService.token\n      }\n    };\n    return this.http.post(baseUrl + '/addquestion' + '/' + bname + '/' + author, question, options );\n  }\n\n  // getAllCustomers(pageNum: number = 1): Observable<any> {\n  //   const options = {\n  //     headers: {\n  //       'authorization': 'Bearer ' + this.authService.token\n  //     }\n  //   };\n  //   return this.http\n  //     .get(baseUrl + '?page=' + pageNum, options);\n  // }\n\n\n  getAllQuestionBanks(pageNum: number = 1): Observable<any> {\n    const options = {\n          headers: {\n            'authorization': 'Bearer ' + this.authService.token\n          }\n        };\n    return this.http\n      .get(baseUrl + '?page=' + pageNum, options);\n  }\n\n  getAllQuestionBanksNoLimit(): Observable<any> {\n    const options = {\n          headers: {\n            'authorization': 'Bearer ' + this.authService.token\n          }\n        };\n    return this.http\n      .get('https://question-bank-rest.herokuapp.com/questionbanks/getall', options);\n  }\n\n  getSelectedQuestions(): Observable<any> {\n    const options = {\n          headers: {\n            'authorization': 'Bearer ' + this.authService.token\n          }\n        };\n    return this.http\n      .get(`https://question-bank-rest.herokuapp.com/questionbanks/get-selected/${this.names}/${this.authors}`, options);\n  }\n\n  // getOneCustomer(custId: string): Observable<any> {\n  //   custId = custId.toUpperCase();\n  //   const options = {\n  //     headers: {\n  //       'authorization': 'Bearer ' + this.authService.token\n  //     }\n  //   };\n  //   return this.http.get(baseUrl + '/' + custId, options);\n  // }\n\n\n  getQuestionBank(bname: string, author: string): Observable<any> {\n    this.bname = bname;\n    this.author = author;\n    const options = {\n          headers: {\n            'authorization': 'Bearer ' + this.authService.token\n          }\n        };\n    \n    return this.http.get(baseUrl + '/' + bname + '/' + author, options);\n  }\n\n  deleteQuestion(question: string): Observable<any> {\n    const options = {\n      headers: {\n        'authorization': 'Bearer ' + this.authService.token\n      }\n    };\n    return this.http.delete(baseUrl + '/deletequestion/' + this.bname + '/' + this.author + '/' + question, options);\n  }\n\n  deleteQuestionBank(): Observable<any> {\n    const options = {\n      headers: {\n        'authorization': 'Bearer ' + this.authService.token\n      }\n    };\n    return this.http.delete(baseUrl + '/deletequestionbank/' + this.bname + '/' + this.author, options);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}